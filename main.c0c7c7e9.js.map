{"version":3,"sources":["scripts/main.js"],"names":["theadList","document","querySelector","tbody","form","createElement","classList","add","formField","name","type","selectValues","addEventListener","e","index","target","cellIndex","element","closest","tbodyRows","querySelectorAll","isDesc","hasAttribute","getAttribute","setAttribute","sort","a","b","aContent","cells","textContent","bContent","localeCompare","toNumber","item","slice","split","join","forEach","append","hasActive","getElementsByClassName","selected","remove","innerHTML","map","field","toUpperCase","minAge","maxAge","age","children","insertAdjacentHTML","value","submitButton","appendChild","body","pushNotification","title","notification","notificationTitle","className","innerText","setTimeout","validateData","newEmployee","el","some","nameInput","ageInput","length","focus","checkValidation","preventDefault","newRow","Math","round","toFixed","toString","replace","reset","activeInput","saveChanges","inputValue","cell","parentNode","Array","from","indexOf","isNaN","parseFloat","Number","previousValue","option","evn","key"],"mappings":"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","file":"main.c0c7c7e9.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst theadList = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nconst formField = [\n  {\n    name: 'name',\n    type: 'text',\n  },\n  {\n    name: 'position',\n    type: 'text',\n  },\n  {\n    name: 'age',\n    type: 'number',\n  },\n  {\n    name: 'salary',\n    type: 'number',\n  },\n];\nconst selectValues = ['Tokyo', 'Singapore',\n  'London', 'New York', 'Edinburgh', 'San Francisco'];\n\ntheadList.addEventListener('click', (e) => {\n  const index = e.target.cellIndex;\n  const element = e.target.closest('th');\n  const tbodyRows = [...tbody.querySelectorAll('tr')];\n  const isDesc = !element.hasAttribute('direction')\n    || element.getAttribute('direction') === 'DESC';\n\n  element.setAttribute('direction', isDesc ? 'ASC' : 'DESC');\n\n  tbodyRows.sort((a, b) => {\n    let aContent = a.cells[index].textContent;\n    let bContent = b.cells[index].textContent;\n\n    if (element.getAttribute('direction') === 'DESC') {\n      aContent = b.cells[index].textContent;\n      bContent = a.cells[index].textContent;\n    }\n\n    switch (index) {\n      case 0:\n      case 1:\n        return aContent.localeCompare(bContent);\n      case 2:\n        return aContent.localeCompare(bContent);\n      case 3:\n        return aContent - bContent;\n      case 4:\n        const toNumber = (item) => item.slice(1).split(',').join('');\n\n        return toNumber(aContent) - toNumber(bContent);\n      default:\n    }\n  });\n  tbodyRows.forEach(item => tbody.append(item));\n});\n\ntbody.addEventListener('click', (e) => {\n  const hasActive = tbody.getElementsByClassName('active')[0];\n  const selected = e.target.closest('tr');\n\n  if (hasActive) {\n    hasActive.classList.remove('active');\n  }\n  selected.classList.add('active');\n});\n\nform.innerHTML = formField.map(field => `\n  <label>\n    ${field.name[0].toUpperCase() + field.name.slice(1)}:\n      <input\n        name=\"${field.name}\"\n        type=\"${field.type}\"\n        data-qa=\"${field.name}\"\n      >\n  </label>\n`).join('');\n\nconst minAge = 18;\nconst maxAge = 90;\nconst age = form.querySelector('[name=\"age\"]');\n\nage.setAttribute('min', minAge);\nage.setAttribute('max', maxAge);\n\nform.children[1].insertAdjacentHTML('afterend', `\n  <label>Office:\n    <select name=\"office\" data-qa=\"office\" selected>\n    <option value=\"\">\n      ${selectValues.map(value => `\n      <option value=\"${value}\">\n        ${value}\n      </option>`).join('')}\n    </select>\n  </label>\n`);\n\nconst submitButton = document.createElement('button');\n\nsubmitButton.type = 'submit';\nsubmitButton.textContent = 'Save to table';\n\nform.appendChild(submitButton);\ndocument.body.appendChild(form);\n\nconst pushNotification = (title, type) => {\n  const notification = document.createElement('div');\n\n  notification.classList.add(`notification`, type);\n  notification.setAttribute('data-qa', 'notification');\n\n  const notificationTitle = document.createElement('h2');\n\n  notificationTitle.className = 'title';\n  notificationTitle.innerText = title;\n  notification.appendChild(notificationTitle);\n  document.querySelector('body').appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n};\n\nfunction validateData() {\n  const newEmployee = [...form.querySelectorAll('label')].map(el =>\n    el.children[0].value);\n\n  if (newEmployee.some(el => el === '')) {\n    pushNotification('Empty fields is not allowed', 'warning');\n\n    return false;\n  } else {\n    const nameInput = form.querySelector('[name=\"name\"]');\n    const ageInput = form.querySelector('[name=\"age\"]');\n\n    if (nameInput.value.length < 4) {\n      pushNotification('Name minimum length is 4', 'error');\n      nameInput.focus();\n\n      return false;\n    } else if (ageInput.value > 90 || ageInput.value < 18) {\n      pushNotification('Age should be between 18 and 90', 'error');\n      ageInput.focus();\n\n      return false;\n    } else {\n      pushNotification('New employee is successfully', 'success');\n\n      return true;\n    }\n  }\n}\n\nsubmitButton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const checkValidation = validateData();\n\n  if (checkValidation) {\n    const newRow = document.createElement('tr');\n    const newEmployee = [...form.querySelectorAll('label')].map(el =>\n      el.children[0].value);\n\n    newEmployee[4] = '$' + (Math.round(newEmployee[4] * 1000) / 1000)\n      .toFixed(3).toString().replace('.', ',');\n    newRow.innerHTML = newEmployee.map(el => `<td>${el}</td>`).join('');\n    form.reset();\n    tbody.append(newRow);\n  }\n});\n\nconst cells = document.querySelectorAll('td');\nlet activeInput = null;\n// let previousValue = '';\n\nfunction saveChanges() {\n  const inputValue = activeInput.value;\n  const cell = activeInput.parentNode;\n  const cellIndex = Array.from(cell.parentNode.children).indexOf(cell);\n\n  switch (cellIndex) {\n    case 0:\n    case 1:\n      if (inputValue.length < 4) {\n        pushNotification('Name minimum length is 4', 'error');\n        activeInput.focus();\n      } else {\n        cell.textContent = inputValue;\n\n        return cell.textContent;\n      }\n      break;\n\n    case 2:\n      cell.textContent = inputValue;\n\n      return cell.textContent;\n\n    case 3:\n      if (isNaN(parseFloat(inputValue)) && Number(inputValue) > 90\n        && Number(inputValue) < 18) {\n        pushNotification('Age should be between 18 and 90', 'error');\n        activeInput.focus();\n      } else {\n        cell.textContent = inputValue;\n\n        return cell.textContent;\n      }\n      break;\n\n    case 4:\n      if (isNaN(parseFloat(inputValue)) && Number(inputValue) < 0) {\n        pushNotification('Input should be a positive number', 'error');\n        activeInput.focus();\n      } else {\n        cell.textContent = '$' + (Math.round(Number(inputValue) * 1000) / 1000)\n          .toFixed(3).toString().replace('.', ',');\n\n        return cell.textContent;\n      }\n  }\n\n  activeInput = null;\n}\n\ncells.forEach((cell) => {\n  cell.addEventListener('dblclick', (e) => {\n    const previousValue = cell.textContent;\n\n    cell.textContent = '';\n\n    const index = e.target.cellIndex;\n\n    switch (index) {\n      case 0:\n      case 1:\n        activeInput = document.createElement('input');\n        activeInput.classList.add('cell-input');\n        activeInput.type = 'text';\n        activeInput.value = previousValue;\n        break;\n\n      case 2:\n        activeInput = document.createElement('select');\n        activeInput.classList.add('cell-input');\n\n        selectValues.forEach((value) => {\n          const option = document.createElement('option');\n\n          option.value = value;\n          option.textContent = value;\n          activeInput.appendChild(option);\n        });\n\n        activeInput.value = previousValue;\n        break;\n\n      case 3:\n      case 4:\n        activeInput = document.createElement('input');\n        activeInput.classList.add('cell-input');\n        activeInput.value = previousValue;\n        break;\n    }\n\n    activeInput.addEventListener('blur', () => {\n      if (!activeInput.value) {\n        activeInput.value = previousValue;\n      } else {\n        saveChanges();\n      }\n    });\n\n    activeInput.addEventListener('keypress', (evn) => {\n      if (evn.key === 'Enter') {\n        saveChanges();\n      }\n    });\n\n    cell.appendChild(activeInput);\n    activeInput.focus();\n  });\n});\n"]}